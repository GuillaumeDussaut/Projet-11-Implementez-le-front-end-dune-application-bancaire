swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /comptes:
    get:
      security:
        - Bearer: []
      tags:
        - Comptes Module
      summary: Get comptes
      description: Retrieve multiple accounts
      operationId: findComptes
      parameters:
        - name: comptes
          in: query
          description: 'Array of account IDs'
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Compte'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error

  /compte/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Comptes Module
      summary: Get compte transactions
      description: API to get compte transactions
      parameters:
        - name: compteId
          in: query
          description: 'Array of account IDs'
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/TransactionList'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error

  /compte/transaction/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Comptes Module
      summary: Get compte transaction details
      description: API to get details of a specific transaction
      parameters:
        - name: transactionId
          in: path
          description: 'récupération des détails des transactions par compte'
          required: true
          schema:
            type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/TransactionDetails'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error

    post:
      security:
        - Bearer: []
      tags:
        - Comptes Module
      summary: Modify compte transaction details
      description: ''
      operationId: uploadDetails
      parameters:
        - name: transactionDetails
          in: body
          description: Transaction Details Payload
          required: true
          schema:
            $ref: '#/definitions/TransactionDetailsPayload'
      requestBody:
        required: true
        content:
          application/json:
            examples:
              example1:
                value:
                  Category: 'Food'
                  Note: 'Lorem'
      responses:
        '201':
          description: Transaction details created successfully
          schema:
            $ref: '#/definitions/TransactionDetailsPayload'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error

    put:
      security:
        - Bearer: []
      tags:
        - Comptes Module
      summary: Modify compte transaction details
      description: ''
      operationId: putDetails
      parameters:
        - name: transactionDetails
          in: body
          description: Transaction Details Payload
          required: true
          schema:
            $ref: '#/definitions/TransactionDetailsPayload'
      requestBody:
        required: true
        content:
          application/json:
            examples:
              example1:
                value:
                  Category: 'Food'
                  Note: 'Lorem'
      responses:
        '201':
          description: Transaction details modified successfully
          schema:
            $ref: '#/definitions/TransactionDetailsPayload'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error

    delete:
      security:
        - Bearer: []
      tags:
        - Comptes Module
      summary: Delete compte transaction details
      description: API to delete details for a transaction
      parameters:
        - in: path
          name: transactionId
          description: 'ID of the transaction'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            example:
              Category: 'Food'
              Note: 'Lorem'
      responses:
        '204':
          description: Successfully deleted
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  Compte:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      solde:
        type: number
        example: 2082.79
  TransactionList:
    required:
      - name
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 3
      date:
        type: string
        example: 27/02/2020
      description:
        type: string
        example: Golden sun Bakery
      Amount:
        type: string
        example: $8.00
      Balance:
        type: string
        example: $298
  TransactionDetails:
    type: object
    properties:
      transactionType:
        type: string
        example: Electronic
      Category:
        type: string
        example: Food
      Note:
        type: string
        example: Lorem
  TransactionDetailsPayload:
    type: object
    properties:
      Category:
        type: string
        example: Food
      Note:
        type: string
        example: Lorem
